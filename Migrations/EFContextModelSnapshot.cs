// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using chatWhatsappServer.DBModels;

#nullable disable

namespace chatWhatsappServer.Migrations
{
    [DbContext(typeof(EFContext))]
    partial class EFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("chatWhatsappServer.DBModels.Inbox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .HasMaxLength(2147483647)
                        .HasColumnType("longtext");

                    b.Property<string>("inboxUID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("lastId")
                        .HasColumnType("int");

                    b.Property<string>("lastdate")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("server")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("lastId");

                    b.ToTable("Inboxes");
                });

            modelBuilder.Entity("chatWhatsappServer.DBModels.InboxParticipants", b =>
                {
                    b.Property<int>("IPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("inboxUID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IPId");

                    b.HasIndex("UserId");

                    b.ToTable("InboxParticipants");
                });

            modelBuilder.Entity("chatWhatsappServer.DBModels.Messages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("created")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("inboxUID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("messageType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("sender")
                        .HasColumnType("longtext");

                    b.Property<bool?>("sent")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("chatWhatsappServer.DBModels.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(2147483647)
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("chatWhatsappServer.DBModels.Inbox", b =>
                {
                    b.HasOne("chatWhatsappServer.DBModels.Messages", "last")
                        .WithMany()
                        .HasForeignKey("lastId");

                    b.Navigation("last");
                });

            modelBuilder.Entity("chatWhatsappServer.DBModels.InboxParticipants", b =>
                {
                    b.HasOne("chatWhatsappServer.DBModels.User", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
